<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_player</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inicializar

//DEBUG
//make_drop(2,x+40,y);
make_drop(1,x-40,y);
//gen_world(0,10000);

isShooting = false;
isRight = true;
grav = 1;
spd = 4;
jump_spd = 12;
jump_spd_def = jump_spd;
max_spd = 6;
jumps = 2;

hspd = 0;
vspd = 0;

//Class system
//clase = 1; //1.-Arquero 2.-Mago 3.-Guerrero

shield_on = false;
shield_id = noone;
shield_cost = 1; //Each step

vida = 500000;
vida_maxima = 500000;
vida_regen = 1; //Per step

mana = 100000;
mana_maximo = 100000;
mana_regen = 0.5;

nivel = 1;
exp_actual = 0;
exp_max = nivel * 25; //XP per monster 2-4

arma_actual = 0; //Default segun la clase
damage = 0;
attack_cost = 0;

global.playerx = x;
global.playery = y;
global.playerid = id;

//Regen
alarm[0] = 1;

//Inventory
global.slot1 = 0;
global.slot2 = 0;
global.slot3 = 0;
global.slot4 = 0;
global.slot5 = 0;
global.slot_actual = 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create particle systems

//BLOOD
global.blood_sys = part_system_create();
global.blood_part = part_type_create();
var p = global.blood_part;

part_type_shape(p,pt_shape_disk);
part_type_size(p,0.05,0.1,0,0);
part_type_speed(p,2,5,-0.1,0);
part_type_direction(p,0,360,0,0);
part_type_gravity(p,0.2,270);
part_type_life(p,25,50);
part_type_colour1(p,c_red);

//ENERGY SHIELD
global.shield_sys = part_system_create();
global.shield_part = part_type_create();
var p2 = global.shield_part;

part_type_shape(p2,pt_shape_spark);
part_type_size(p2,0.05,0.1,0,0);
part_type_speed(p2,2,5,-0.1,0);
part_type_direction(p2,180,360,0,0);
part_type_gravity(p2,0.7,270);
part_type_life(p2,25,50);
part_type_colour1(p2,c_yellow);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Regen atributos
if(vida &lt; vida_maxima) {
    vida += vida_regen;
}
if(mana &lt; mana_maximo) {
    mana += mana_regen;
}

alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clamp mana &amp; life bars

clamp(vida,0,vida_maxima);
clamp(mana,0,mana_maximo);
global.playerx = x;
global.playery = y;

//view_xview[0] += ((x-(view_wview[0]/2)) - view_xview[0]) * 0.5;
//view_yview[0] += ((y-(view_hview[0]/2)) - view_yview[0]) * 0.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Platform physics
if(vida &lt;= 0) {
    room_restart();
}

left = keyboard_check(ord("A"));
right = keyboard_check(ord("D"));
jump = keyboard_check_pressed(vk_space);

if(place_meeting(x,y+1,obj_solid)) {
    vspd = 0;
    jumps = 2;
    jump_spd = jump_spd_def;
} else {
    if(vspd &lt; 10) {
        vspd += grav;
    }
}

if(jump &amp;&amp; jumps &gt; 0) {
    if(jumps == 1) {
        vspd = -jump_spd * 1.3;
        jumps--;
    } else {
    vspd = -jump_spd;
    jumps--;
    }
}

if(!left &amp;&amp; !right) {
    hspd = 0;
}

if(left) {
    hspd = -spd;
    isRight = false;
}
if(right) {
    hspd = spd;
    isRight = true;
}

if(place_meeting(x+hspd,y,obj_solid)) {
    while(!place_meeting(x+sign(hspd),y,obj_solid)) {
        x += sign(hspd);
    }
    hspd = 0;
}

x += hspd * global.delta;

if(place_meeting(x,y+vspd,obj_solid)) {
    while(!place_meeting(x,y+sign(vspd),obj_solid)) {
        y += sign(vspd);
    }
    vspd = 0;
}

y += vspd * global.delta;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Internal calculations

//Level system
exp_max = nivel * 25;

if(exp_actual &gt;= exp_max) {
    nivel += 1;
    exp_actual = 0;
}

if(shield_on) {
    if(mana &gt;= shield_cost) {
        mana -= shield_cost;
    } else {
        with(shield_id) { instance_destroy(); }
        shield_on = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Optimization
/*
instance_activate_all();
instance_deactivate_region(view_xview[0]-128,view_yview[0]-128, view_wview[0]+128, view_hview[0]+128, false, true);
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inventory Control
set_cost_damage();
update_equiped_weapon();

if(keyboard_check_pressed(ord("1"))) {
    arma_actual = global.slot1;
    global.slot_actual = 1;
}
if(keyboard_check_pressed(ord("2"))) {
    arma_actual = global.slot2;
    global.slot_actual = 2;
}
if(keyboard_check_pressed(ord("3"))) {
    arma_actual = global.slot3;
    global.slot_actual = 3;
}
if(keyboard_check_pressed(ord("4"))) {
    arma_actual = global.slot4;
    global.slot_actual = 4;
}
if(keyboard_check_pressed(ord("5"))) {
    arma_actual = global.slot5;
    global.slot_actual = 5;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation control
//effect_create_above(ef_spark,mouse_x,mouse_y,0.2,c_white);

/*
if(x &gt; mouse_x) {
    isRight = false;
    image_xscale = -1;
} else {
    isRight = true;
    image_xscale = 1;
}
*/

if(y != yprevious) {
    sprite_index = spr_player_jump;
    image_speed = 0;
    image_index = y&gt;yprevious;
} else {
    if(x != xprevious) {
        sprite_index = spr_player_walk;
        image_speed = 0.1;
    } else {
        sprite_index = spr_player_idle;
        image_speed = choose(0.1,0.25);
    }
}

if(!isShooting) {
    if(xprevious &lt; x) {
        image_xscale = 1;
    } else if(xprevious &gt; x) {
        image_xscale = -1;
    }
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy_projectile">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_particles_create(global.blood_sys,other.x,other.y,global.blood_part,10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="57">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(shield_id) {
    instance_destroy();
}
shield_on = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!shield_on) {
    shield_id = instance_create(x,y,obj_shield);
    shield_on = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(isRight) {
    var xx = x + 16;
} else {
    var xx = x - 16;
}

if(x &gt; mouse_x) {
    isRight = false;
} else {
    isRight = true;
}

if(mana &gt;= attack_cost) {
    switch(arma_actual) {
        default: instance_create(xx,y,obj_void); break;
        case 1: instance_create(xx,y,obj_arrow); break;
        case 2: instance_create(xx,y,obj_fireball);  break;
    }
    if(x &gt; mouse_x) {
        isShooting = true;
        image_xscale = -1;
    } else {
        image_xscale = 1;
        isShooting = true;
    }
    mana -= attack_cost;  
    isShooting = false;  
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_system_destroy(global.blood_sys);
part_type_destroy(global.blood_part);
part_system_destroy(global.shield_sys);
part_type_destroy(global.shield_part);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw bars
/*
max hp px = 126

126 = 100
x   =

*/

scale_vida = vida * 200 / vida_maxima;
scale_mana = mana * 200 / mana_maximo;
scale_exp = exp_actual * 200 / exp_max;

draw_sprite(spr_health_bar,0,16,16);
draw_sprite_ext(spr_health,0,17,17,scale_vida,1,0,c_white,1);
draw_sprite(spr_mana_bar,0,16,37);
draw_sprite_ext(spr_mana,0,17,38,scale_mana,1,0,c_white,1);

//draw_sprite(spr_exp_bar,0,16,59);
//draw_sprite_ext(spr_exp,0,17,60,scale_exp,1,0,c_white,1);

draw_set_font(fnt_exp);
draw_set_valign(fa_middle);
draw_set_halign(fa_center);
//draw_text(125,66,string(exp_actual) + " / " + string(exp_max));
draw_text(125,22,string(floor(vida)) + " / " + string(vida_maxima));
draw_text(125,44,string(floor(mana)) + " / " + string(mana_maximo));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw inventory
/*
if(global.slot_actual == 1) {
    draw_sprite(spr_selected_slot,0,200+32,20);    
} else {
    draw_sprite(spr_slot,0,200+32,20);
}
if(global.slot_actual == 2) {
    draw_sprite(spr_selected_slot,0,200+32*2+10,20);    
} else {
    draw_sprite(spr_slot,0,200+32*2+10,20);
}
if(global.slot_actual == 3) {
    draw_sprite(spr_selected_slot,0,200+32*3+20,20);
} else {
    draw_sprite(spr_slot,0,200+32*3+20,20);
}
if(global.slot_actual == 4) {
    draw_sprite(spr_selected_slot,0,200+32*4+30,20);
} else {
    draw_sprite(spr_slot,0,200+32*4+30,20);
}
if(global.slot_actual == 5) {
    draw_sprite(spr_selected_slot,0,200+32*5+40,20);
} else {
    draw_sprite(spr_slot,0,200+32*5+40,20);
}

//Draw item (Sprites origin on upper left corner)
draw_sprite(draw_item(global.slot1),0,200+32,20);
draw_sprite(draw_item(global.slot2),0,200+32*2+10,20);
draw_sprite(draw_item(global.slot3),0,200+32*3+20,20);
draw_sprite(draw_item(global.slot4),0,200+32*4+30,20);
draw_sprite(draw_item(global.slot5),0,200+32*5+40,20);
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="116">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
