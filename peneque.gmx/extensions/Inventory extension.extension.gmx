<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<extension>
  <name>Inventory extension</name>
  <version>1.31</version>
  <packageID></packageID>
  <ProductID></ProductID>
  <date>2007.08.24.</date>
  <license>License is in the help file.</license>
  <description>This extension allows making of RPG inventory. It can make inventory's from Diablo, Mu Online, Arcanum and lots of others.</description>
  <helpfile>Inventory extension.chm</helpfile>
  <androidProps>0</androidProps>
  <iosProps>0</iosProps>
  <installdir></installdir>
  <classname></classname>
  <androidclassname></androidclassname>
  <sourcedir></sourcedir>
  <androidsourcedir></androidsourcedir>
  <macsourcedir></macsourcedir>
  <maclinkerflags></maclinkerflags>
  <androidinject></androidinject>
  <iosSystemFrameworks/>
  <iosThirdPartyFrameworks/>
  <androidPermissions/>
  <IncludedResources/>
  <files>
    <file>
      <filename>inventory.gml</filename>
      <origname>C:\HaRRiKiRi\Games\gamemaker\gm7\finished\extensions\inventory extension\inventory.gml</origname>
      <init></init>
      <final></final>
      <kind>2</kind>
      <uncompress>0</uncompress>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>9223372036854775807</CopyToMask>
        </Config>
      </ConfigOptions>
      <ProxyFiles/>
      <functions>
        <function>
          <name>inv_action</name>
          <externalName>inv_action</externalName>
          <kind>2</kind>
          <help>inv_action(inventory object, item object, dropped object, drop x, drop y, equipment object);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_change_size</name>
          <externalName>inv_change_size</externalName>
          <kind>2</kind>
          <help>inv_change_size(width, height);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_count_item</name>
          <externalName>inv_count_item</externalName>
          <kind>2</kind>
          <help>inv_count_item(item object, name);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_create</name>
          <externalName>inv_create</externalName>
          <kind>2</kind>
          <help>inv_create(width, height, x, y, cell diameter, pick sound, cube object);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_cube_create</name>
          <externalName>inv_cube_create</externalName>
          <kind>2</kind>
          <help>inv_cube_create(width,height,x,y,cell diameter);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_cube_draw</name>
          <externalName>inv_cube_draw</externalName>
          <kind>2</kind>
          <help>inv_cube_draw(spr1,spr2,alpha,x,y,item obj.);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_cube_itemlist</name>
          <externalName>inv_cube_itemlist</externalName>
          <kind>2</kind>
          <help>inv_cube_itemlist(item list);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_cube_make</name>
          <externalName>inv_cube_make</externalName>
          <kind>2</kind>
          <help>inv_cube_make(inv. obj.,x,y,pick. obj.,created item id);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_cube_putin</name>
          <externalName>inv_cube_putin</externalName>
          <kind>2</kind>
          <help>inv_cube_putin(inventory obj., item obj., full sound, cube object);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_cube_true</name>
          <externalName>inv_cube_true</externalName>
          <kind>2</kind>
          <help>inv_cube_true(item name, number);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_draw</name>
          <externalName>inv_draw</externalName>
          <kind>2</kind>
          <help>inv_draw(spr1,spr2,alpha,x,y,item object, topmost object);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_dropped_create</name>
          <externalName>inv_dropped_create</externalName>
          <kind>2</kind>
          <help>inv_dropped_create(name, width, height, animation, spr1, type, snd1, snd2, code1, code2);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_dropped_draw</name>
          <externalName>inv_dropped_draw</externalName>
          <kind>2</kind>
          <help>inv_dropped_draw(alpha,color);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_dropped_select</name>
          <externalName>inv_dropped_select</externalName>
          <kind>2</kind>
          <help>inv_dropped_select(state, dropped object);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_equipment_create</name>
          <externalName>inv_equipment_create</externalName>
          <kind>2</kind>
          <help>inv_equipment_create(x,y,type,sound,inventory object);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_equipment_draw</name>
          <externalName>inv_equipment_draw</externalName>
          <kind>2</kind>
          <help>inv_equipment_draw(sprite, x, y, alpha, width, height, draw);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_fit_draw</name>
          <externalName>inv_fit_draw</externalName>
          <kind>2</kind>
          <help>inv_fit_draw(inv. object,  alpha, col1, col2, spr1, spr2);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_get_item</name>
          <externalName>inv_get_item</externalName>
          <kind>2</kind>
          <help>inv_get_item(item object,name, num);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_info_add_line</name>
          <externalName>inv_info_add_line</externalName>
          <kind>2</kind>
          <help>inv_info_add_line(text, color, font, variable);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_info_change</name>
          <externalName>inv_info_change</externalName>
          <kind>2</kind>
          <help>inv_info_change(variable, text);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_info_draw</name>
          <externalName>inv_info_draw</externalName>
          <kind>2</kind>
          <help>inv_info_draw(outline, color, alpha, inv. object);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_info_remove_line</name>
          <externalName>inv_info_remove_line</externalName>
          <kind>2</kind>
          <help>inv_info_remove_line(variable);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_info_set</name>
          <externalName>inv_info_set</externalName>
          <kind>2</kind>
          <help>inv_info_set(x,y,balpha,bcolor,talpha, inv. object);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_item_remove</name>
          <externalName>inv_item_remove</externalName>
          <kind>2</kind>
          <help>inv_item_remove(inv. object, item id);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_item_stock</name>
          <externalName>inv_item_stock</externalName>
          <kind>2</kind>
          <help>inv_item_stock(max stock, num, stage);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_item_under</name>
          <externalName>inv_item_under</externalName>
          <kind>2</kind>
          <help>inv_item_under(inv. object);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_name_create</name>
          <externalName>inv_name_create</externalName>
          <kind>2</kind>
          <help>inv_name_create(name, tcolor, talpha, bcolor, ocolor, balpha, oalpha);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_name_draw</name>
          <externalName>inv_name_draw</externalName>
          <kind>2</kind>
          <help>inv_name_draw(x, y, alpha);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_nodropzone_add</name>
          <externalName>inv_nodropzone_add</externalName>
          <kind>2</kind>
          <help>inv_nodropzone_add(x,y,width,height,id,state);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_nodropzone_update</name>
          <externalName>inv_nodropzone_update</externalName>
          <kind>2</kind>
          <help>inv_nodropzone_update(x,y,width,height,id,state);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_open</name>
          <externalName>inv_open</externalName>
          <kind>2</kind>
          <help>inv_open(state);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_picked_draw</name>
          <externalName>inv_picked_draw</externalName>
          <kind>2</kind>
          <help>inv_picked_draw(inv. object, alpha, occlusion type, ccolor, calpha, quantity text, sdirection, scolor, xoffset, yoffset);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_pick_up</name>
          <externalName>inv_pick_up</externalName>
          <kind>2</kind>
          <help>inv_pick_up(inv. object, item object, full sound);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_place_item_in_inv</name>
          <externalName>inv_place_item_in_inv</externalName>
          <kind>2</kind>
          <help>inv_place_item_in_inv(inv. object, x, y, picked object, type);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_requirement_add</name>
          <externalName>inv_requirement_add</externalName>
          <kind>2</kind>
          <help>inv_requirement_add(variable, value, type, variable string, text, color);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_requirement_update</name>
          <externalName>inv_requirement_update</externalName>
          <kind>2</kind>
          <help>inv_requirement_update(variable, value);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_selected_draw</name>
          <externalName>inv_selected_draw</externalName>
          <kind>2</kind>
          <help>inv_selected_draw(color, alpha, ccolor, calpha);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>inv_item_change</name>
          <externalName>inv_item_change</externalName>
          <kind>2</kind>
          <help>inv_item_change(name, width, height, animation, spr1, type, snd1, snd2, code1, code2);</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
      </functions>
      <constants/>
    </file>
  </files>
</extension>
